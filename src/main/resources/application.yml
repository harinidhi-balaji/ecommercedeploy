# ECommerce Application Configuration
# This is the internal configuration file packaged with the JAR

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  # Database Configuration (will be overridden by external config)
  datasource:
    url: ${DB_URL:jdbc:postgresql://ep-gentle-heart-a1x56x94-pooler.ap-southeast-1.aws.neon.tech/ecom}
    username: ${DB_USERNAME:neondb_owner}
    password: ${DB_PASSWORD:npg_vFszfGcNe30w}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:create-drop}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  # Thymeleaf Configuration
  thymeleaf:
    cache: ${THYMELEAF_CACHE:false}
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8

  # Security Configuration
  security:
    remember-me:
      key: ${REMEMBER_ME_KEY:ecommerce-remember-me-key}

  # Web Configuration
  web:
    resources:
      cache:
        period: 86400
        cachecontrol:
          max-age: 365d

  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:}
    session:
      timeout: 30m
      cookie:
        http-only: true
        secure: ${COOKIE_SECURE:false}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Logging Configuration
logging:
  level:
    com.ecommerce: ${LOG_LEVEL:INFO}
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SQL_PARAMS_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:logs/ecommerce.log}

# Application Specific Configuration
app:
  name: ECommerce Application
  version: 1.0.0
  description: Complete Spring Boot Ecommerce Application

  # File storage configuration
  file:
    upload-dir: ${UPLOAD_DIR:uploads}
    max-size: 10MB

  # Email configuration (for future use)
  email:
    enabled: ${EMAIL_ENABLED:false}
    from: ${EMAIL_FROM:noreply@ecommerce.com}

  # Cache configuration
  cache:
    enabled: ${CACHE_ENABLED:true}
    ttl: ${CACHE_TTL:3600}

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

  datasource:
    url: jdbc:postgresql://ep-gentle-heart-a1x56x94-pooler.ap-southeast-1.aws.neon.tech/ecom

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  thymeleaf:
    cache: false

logging:
  level:
    com.ecommerce: DEBUG
    org.springframework.security: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

  thymeleaf:
    cache: true

server:
  servlet:
    session:
      cookie:
        secure: true

logging:
  level:
    com.ecommerce: INFO
    root: WARN

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:

  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect

  h2:
    console:
      enabled: true
