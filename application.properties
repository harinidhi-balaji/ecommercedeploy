# External Configuration File for ECommerce Application
# Place this file in the same directory as the JAR file for deployment

# =============================================
# DATABASE CONFIGURATION
# =============================================
# PostgreSQL Database Connection
spring.datasource.url=jdbc:postgresql://ep-gentle-heart-a1x56x94-pooler.ap-southeast-1.aws.neon.tech/ecom
spring.datasource.username=neondb_owner
spring.datasource.password=npg_vFszfGcNe30w

# For production, consider using a dedicated database user:
# spring.datasource.username=ecommerce_user
# spring.datasource.password=your_secure_password

# =============================================
# SERVER CONFIGURATION
# =============================================
# Server port (default: 8080)
server.port=8080

# Context path (default: empty, app runs on root)
# server.servlet.context-path=/ecommerce

# =============================================
# SPRING PROFILES
# =============================================
# Active profile: dev, prod, or test
spring.profiles.active=dev

# =============================================
# JPA/HIBERNATE CONFIGURATION
# =============================================
# DDL mode: validate, update, create, create-drop
# Use 'validate' in production, 'update' in development
spring.jpa.hibernate.ddl-auto=create-drop

# Show SQL queries in logs (set to false in production)
spring.jpa.show-sql=false

# PostgreSQL specific properties
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Disable open-in-view warning
spring.jpa.open-in-view=false

# =============================================
# LOGGING CONFIGURATION
# =============================================
# Log levels: TRACE, DEBUG, INFO, WARN, ERROR
LOG_LEVEL=INFO
SECURITY_LOG_LEVEL=WARN
SQL_LOG_LEVEL=WARN
SQL_PARAMS_LOG_LEVEL=WARN

# Log file location
LOG_FILE=logs/ecommerce.log

# =============================================
# SECURITY CONFIGURATION
# =============================================
# Remember me key (change this to a secure random string)
REMEMBER_ME_KEY=change-this-to-secure-random-key

# Cookie security (set to true in production with HTTPS)
COOKIE_SECURE=true

# =============================================
# CACHE CONFIGURATION
# =============================================
# Enable/disable caching
CACHE_ENABLED=true
CACHE_TTL=3600

# Thymeleaf template caching (set to true in production)
THYMELEAF_CACHE=true

# =============================================
# FILE UPLOAD CONFIGURATION
# =============================================
# Directory for uploaded files
UPLOAD_DIR=uploads

# =============================================
# EMAIL CONFIGURATION (Optional)
# =============================================
# Enable email notifications
EMAIL_ENABLED=false
EMAIL_FROM=noreply@ecommerce.com

# SMTP Configuration (uncomment and configure if EMAIL_ENABLED=true)
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USERNAME=your-email@gmail.com
# EMAIL_PASSWORD=your-app-password
# EMAIL_TLS=true

# =============================================
# SSL/HTTPS CONFIGURATION (Production)
# =============================================
# Uncomment and configure for HTTPS in production
# server.ssl.key-store=keystore.p12
# server.ssl.key-store-password=your-keystore-password
# server.ssl.keyStoreType=PKCS12
# server.ssl.keyAlias=ecommerce
# server.port=8443

# =============================================
# ADDITIONAL PRODUCTION SETTINGS
# =============================================
# Management endpoints (for monitoring)
# management.endpoints.web.exposure.include=health,info,metrics
# management.endpoint.health.show-details=when-authorized

# =============================================
# DEVELOPMENT OVERRIDES
# =============================================
# Uncomment the following settings for development

# Development database (if using separate dev database)
# DB_URL=jdbc:mysql://localhost:3306/ecommerce_dev
# SPRING_PROFILES_ACTIVE=dev
# DDL_AUTO=update
# SHOW_SQL=true
# LOG_LEVEL=DEBUG
# THYMELEAF_CACHE=false
# COOKIE_SECURE=false

# =============================================
# DOCKER CONFIGURATION
# =============================================
# Uncomment for Docker deployment

# DB_URL=jdbc:mysql://mysql-container:3306/ecommerce_db
# DB_USERNAME=ecommerce_user
# DB_PASSWORD=docker_password

# =============================================
# CLOUD DEPLOYMENT CONFIGURATION
# =============================================
# Examples for cloud deployment (AWS RDS, etc.)

# AWS RDS Example:
# DB_URL=jdbc:mysql://your-rds-endpoint.region.rds.amazonaws.com:3306/ecommerce_db
# DB_USERNAME=admin
# DB_PASSWORD=your-rds-password

# Google Cloud SQL Example:
# DB_URL=jdbc:mysql://google/ecommerce_db?cloudSqlInstance=your-project:region:instance&socketFactory=com.google.cloud.sql.mysql.SocketFactory
# DB_USERNAME=your-username
# DB_PASSWORD=your-password

# =============================================
# BACKUP CONFIGURATION
# =============================================
# Database backup settings (for reference)
# BACKUP_ENABLED=true
# BACKUP_SCHEDULE=0 0 2 * * ?
# BACKUP_LOCATION=/backups/

# =============================================
# PERFORMANCE TUNING
# =============================================
# JVM settings for production (add to startup command)
# -Xms1g -Xmx2g -XX:+UseG1GC -XX:MaxGCPauseMillis=200

# Database connection pool settings (already configured in application.yml)
# spring.datasource.hikari.maximum-pool-size=50
# spring.datasource.hikari.minimum-idle=10